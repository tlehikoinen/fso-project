{"version":3,"sources":["services/messages.js","reducers/messageReducer.js","store.js","Messages/Message.js","Messages/index.js","Home/index.js","App.js","index.js"],"names":["baseUrl","getAll","a","axios","get","response","console","log","data","exports","addMessage","message","post","deleteMessage","id","delete","removeMessage","type","setMessages","messages","messageReducer","state","action","filter","m","_id","concat","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Message","dispatch","useDispatch","messageService","status","content","onClick","Messages","useSelector","useState","newMessage","setNewMessage","sendNewMessage","event","preventDefault","map","onSubmit","value","onChange","target","Home","App","useEffect","style","padding","to","path","exact","ReactDOM","render","document","getElementById"],"mappings":"qOACMA,EAAU,YAEVC,EAAM,uCAAG,4BAAAC,EAAA,sEACUC,IAAMC,IAAIJ,GADpB,cACPK,EADO,OAEbC,QAAQC,IAAIF,EAASG,MAFR,kBAGNH,EAASG,MAHH,2CAAH,qDAkBGC,EAFC,CAAEC,WAVF,uCAAG,WAAQC,GAAR,eAAAT,EAAA,sEACMC,IAAMS,KAAKZ,EAAS,CAAEW,QAASA,IADrC,cACXN,EADW,yBAEVA,GAFU,2CAAH,sDAUcQ,cALX,uCAAG,WAAOC,GAAP,eAAAZ,EAAA,sEACGC,IAAMY,OAAN,UAAgBf,EAAhB,YAA2Bc,IAD9B,cACdT,EADc,yBAEbA,GAFa,2CAAH,sDAK0BJ,UCWhCe,EAAgB,SAACF,GAC5B,MAAO,CACLG,KAAM,iBACNH,GAAIA,IAWKI,EAAc,SAACC,GAE1B,OADAb,QAAQC,IAAI,cAAeY,GACpB,CACLF,KAAM,eACNE,aAKWC,EAnDQ,WAAuC,IAAtCC,EAAqC,uDAA7B,CAAEF,SAAU,IAAMG,EAAW,uCAC3D,OAAQA,EAAOL,MACf,IAAK,iBAEH,OADAI,EAAMF,SAAWE,EAAMF,SAASI,QAAO,SAAAC,GAAC,OAAIA,EAAEC,MAAQH,EAAOR,MACtDO,EAET,IAAK,cAEH,OADAA,EAAMF,SAAWE,EAAMF,SAASO,OAAOJ,EAAOX,SACvCU,EAET,IAAK,eAGH,OAFAA,EAAMF,SAAWG,EAAOH,SACxBb,QAAQC,IAAI,UAAWc,GAChBA,EAET,QACE,OAAOA,ICbLM,EAAUC,0BAAgB,CAC9BT,SAAUC,IAOGS,EAJDC,sBACZH,EAASI,8BAAoBC,0BAAgBC,O,8BCWhCC,EAhBC,SAAC,GAAkB,IAAfvB,EAAc,EAAdA,QACZwB,EAAWC,cAEXvB,EAAa,uCAAG,WAAMC,GAAN,SAAAZ,EAAA,sEACGmC,EAAexB,cAAcC,GADhC,OAEI,MAFJ,OAEPwB,QACXH,EAASnB,EAAcF,IAHL,2CAAH,sDAMnB,OACE,gCACGH,EAAQ4B,QADX,IACoB,wBAAQC,QAAS,kBAAM3B,EAAcF,EAAQc,MAA7C,wBCyBTgB,EAnCE,WACf,IAAMN,EAAWC,cACXjB,EAAWuB,aAAY,SAAArB,GAAK,OAAIA,EAAMF,SAASA,YACrD,EAAsCwB,mBAAS,IAA/C,mBAAQC,EAAR,KAAoBC,EAApB,KAKMC,EAAc,uCAAG,WAAOC,GAAP,eAAA7C,EAAA,6DACrB6C,EAAMC,iBADe,SAEEX,EAAe3B,WAAWkC,GAF5B,OAGG,OADlBvC,EAFe,QAGRiC,SACXH,EHoBG,CACLlB,KAAM,cACNN,QGtBsBN,EAASG,OAC7BqC,EAAc,KALK,2CAAH,sDASpB,OAAK1B,EAKH,qCACE,gDACCA,EAAS8B,KAAI,SAAAzB,GAAC,OAAI,cAAC,EAAD,CAAqBb,QAASa,GAAhBA,EAAEC,QACnC,8BACE,uBAAMyB,SAAU,SAACH,GAAD,OAAWD,EAAeC,IAA1C,UACE,uBAAO9B,KAAK,OAAOkC,MAAOP,EAAYQ,SAtBpB,SAACL,GACzBF,EAAcE,EAAMM,OAAOF,UAoBvB,IAC8E,wBAAQlC,KAAK,SAAb,4BAT1E,mDCdGqC,EARF,WACX,OACE,2CCgCWC,EA1BH,WACV,IAAMpB,EAAWC,cAMjB,OAJAoB,qBAAU,WACRrB,ELSF,uCAAO,WAAMA,GAAN,eAAAjC,EAAA,sEACkBmC,EAAepC,SADjC,OACCkB,EADD,OAELb,QAAQC,IAAI,wBAAyBY,GACrCgB,EAASjB,EAAYC,IAHhB,2CAAP,yDKRG,CAACgB,IAGF,eAAC,IAAD,WACE,gCACE,cAAC,IAAD,CAAMsB,MAAO,CAAEC,QAAS,QAAUC,GAAG,IAArC,kBACA,cAAC,IAAD,CAAMF,MAAO,CAAEC,QAAS,QAAUC,GAAG,YAArC,yBAGF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,YAAYC,OAAK,EAA7B,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,IAAZ,SACE,cAAC,EAAD,aCvBVE,IAASC,OACP,cAAC,IAAD,CAAUlC,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFmC,SAASC,eAAe,W","file":"static/js/main.07b42990.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/test'\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  console.log(response.data)\r\n  return response.data\r\n}\r\n\r\nconst addMessage = async ( message ) => {\r\n  const response = await axios.post(baseUrl, { message: message })\r\n  return response\r\n}\r\n\r\nconst deleteMessage = async (id) => {\r\n  const response = await axios.delete(`${baseUrl}/${id}`)\r\n  return response\r\n}\r\n\r\nconst exports = { addMessage, deleteMessage, getAll }\r\n\r\nexport default exports","import messageService from '../services/messages'\r\n\r\nconst messageReducer = (state = { messages: [] }, action) => {\r\n  switch (action.type) {\r\n  case 'REMOVE_MESSAGE': {\r\n    state.messages = state.messages.filter(m => m._id !== action.id)\r\n    return state\r\n  }\r\n  case 'SET_MESSAGE': {\r\n    state.messages = state.messages.concat(action.message)\r\n    return state\r\n  }\r\n  case 'SET_MESSAGES': {\r\n    state.messages = action.messages\r\n    console.log('state, ', state)\r\n    return state\r\n  }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const getMessagesFromServer = () => {\r\n  return async dispatch => {\r\n    const messages = await messageService.getAll()\r\n    console.log('getmessagesfromserver', messages)\r\n    dispatch(setMessages(messages))\r\n  }\r\n}\r\n\r\nexport const removeMessage = (id) => {\r\n  return {\r\n    type: 'REMOVE_MESSAGE',\r\n    id: id\r\n  }\r\n}\r\n\r\nexport const setMessage = (message) => {\r\n  return {\r\n    type: 'SET_MESSAGE',\r\n    message\r\n  }\r\n}\r\n\r\nexport const setMessages = (messages) => {\r\n  console.log('setmessages', messages)\r\n  return {\r\n    type: 'SET_MESSAGES',\r\n    messages\r\n  }\r\n}\r\n\r\n\r\nexport default messageReducer","import { createStore, combineReducers, applyMiddleware }  from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport messageReducer from './reducers/messageReducer'\r\n\r\nconst reducer = combineReducers({\r\n  messages: messageReducer\r\n})\r\n\r\nconst store = createStore(\r\n  reducer, composeWithDevTools(applyMiddleware(thunk))\r\n)\r\n\r\nexport default store","import React from 'react'\r\nimport messageService from '../services/messages'\r\nimport { useDispatch } from 'react-redux'\r\nimport { removeMessage } from '../reducers/messageReducer'\r\n\r\nconst Message = ( { message }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const deleteMessage = async id => {\r\n    const response = await messageService.deleteMessage(id)\r\n    if (response.status === 202) {\r\n      dispatch(removeMessage(id))\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      {message.content} <button onClick={() => deleteMessage(message._id)}>delete</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from './Message'\r\nimport messageService from '../services/messages'\r\nimport { setMessage } from '../reducers/messageReducer'\r\n\r\nconst Messages = () => {\r\n  const dispatch = useDispatch()\r\n  const messages = useSelector(state => state.messages.messages)\r\n  const [ newMessage, setNewMessage ] = useState('')\r\n\r\n  const handleInputChange = (event) => {\r\n    setNewMessage(event.target.value)\r\n  }\r\n  const sendNewMessage = async (event) => {\r\n    event.preventDefault()\r\n    const response = await messageService.addMessage(newMessage)\r\n    if (response.status === 200) {\r\n      dispatch(setMessage(response.data))\r\n      setNewMessage('')\r\n    }\r\n  }\r\n\r\n  if (!messages) {\r\n    return (<>Loading...</>)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2>Message header</h2>\r\n      {messages.map(m => <Message key={m._id} message={m} />)}\r\n      <div>\r\n        <form onSubmit={(event) => sendNewMessage(event)}>\r\n          <input type=\"text\" value={newMessage} onChange={handleInputChange}></input> <button type=\"submit\">submit</button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default Messages","import React from 'react'\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n            Welcome\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home","import React, { useEffect } from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch, Route, Link\r\n} from 'react-router-dom'\r\nimport Messages from './Messages'\r\nimport Home from './Home'\r\nimport { useDispatch } from 'react-redux'\r\nimport { getMessagesFromServer } from './reducers/messageReducer'\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(getMessagesFromServer())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Link style={{ padding: '10px' }} to='/'>home</Link>\r\n        <Link style={{ padding: '10px' }} to='/Messages'>messages</Link>\r\n      </div>\r\n\r\n      <Switch>\r\n        <Route path='/Messages' exact>\r\n          <Messages />\r\n        </Route>\r\n        <Route path='/'>\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'))\r\n\r\n\r\n"],"sourceRoot":""}